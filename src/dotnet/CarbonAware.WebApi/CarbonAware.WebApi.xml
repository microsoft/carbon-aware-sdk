<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CarbonAware.WebApi</name>
    </assembly>
    <members>
        <member name="M:CarbonAware.WebApi.Controllers.CarbonAwareController.GetEmissionsDataAsync(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Given a dictionary of properties, handles call to GetEmissionsDataAsync including logging and response handling.
            </summary>
            <param name="props"> Dictionary of properties to call plugin. </param>
            <returns>Result of the plugin call or resulting status response</returns>
        </member>
        <member name="T:CarbonAware.WebApi.Controllers.SciScoreController">
            <summary>
            Controller for the API routes that lead to retrieving the sci scores and marginal carbon intensities 
            </summary>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.SciScoreController.CreateAsync(CarbonAware.WebApi.Models.SciScoreInput)">
            <summary> Gets sci-score value, currently dummy function to keep consistency </summary>
            <param name="input"> input from JSON request converted to input object with location and time interval </param>
            <returns>Result of the call to the aggregator that calculates the sci score</returns>
            <response code="200">successful operation</response>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.SciScoreController.GetCarbonIntensityAsync(CarbonAware.WebApi.Models.SciScoreInput)">
            <summary> Gets the marginal carbon intensity value </summary>
            <param name="input"> input from JSON request converted to input object with location and time interval </param>
            <returns>Result of the call to the aggregator to retrieve carbon intenstiy</returns>
        </member>
        <member name="M:CarbonAware.WebApi.Controllers.SciScoreController.GetLocation(CarbonAware.WebApi.Models.LocationInput)">
            Validate the user input location and convert it to the internal Location object.
        </member>
        <member name="P:CarbonAware.WebApi.Models.SciScore.SciScoreValue">
            <example>750.6</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.SciScore.EnergyValue">
            <example>1</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.SciScore.MarginalCarbonIntensityValue">
            <example>750</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.SciScore.EmbodiedEmissionsValue">
            <example>0</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.SciScore.FunctionalUnitValue">
            <example>1</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.LocationInput.LocationType">
            <example>Cloud Provider</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.LocationInput.Latitude">
            <example>153.23</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.LocationInput.Longitude">
            <example>72.23</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.LocationInput.CloudProvider">
            <example>Azure</example>
        </member>
        <member name="P:CarbonAware.WebApi.Models.LocationInput.RegionName">
            <example>useast</example>
        </member>
    </members>
</doc>
